# \u6392\u9664 druid \u7684\u81EA\u52A8\u914D\u7F6E \u5426\u5219\u65E0\u6CD5\u542F\u52A8\u9879\u76EE
spring.autoconfigure.exclude=com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure

# \u6570\u636E\u6E90\u540D\u79F0\uFF0C\u591A\u4E2A\u6570\u636E\u6E90\u7528\u9017\u53F7\u533A\u5206
spring.shardingsphere.datasource.names=write-ds,read-ds

# \u914D\u7F6E write-ds \u6570\u636E\u6E90
# \u6CE8\u610F\uFF1A\u4F7F\u7528druid\u65F6\uFF0C\u9700\u8981\u628Ajdbc-url\u6539\u6210url
spring.shardingsphere.datasource.write-ds.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.write-ds.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.write-ds.url=jdbc:mysql://localhost:3306/renren_write?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&nullCatalogMeansCurrent=true
spring.shardingsphere.datasource.write-ds.username=renren
spring.shardingsphere.datasource.write-ds.password=123456

# \u914D\u7F6E read-ds \u6570\u636E\u6E90
spring.shardingsphere.datasource.read-ds.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.read-ds.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.read-ds.url=jdbc:mysql://localhost:3306/renren_read?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&nullCatalogMeansCurrent=true
spring.shardingsphere.datasource.read-ds.username=renren
spring.shardingsphere.datasource.read-ds.password=123456

# \u8BFB\u5199\u5206\u79BB\u7C7B\u578B\uFF0C\u53EF\u9009: Static\uFF0CDynamic
spring.shardingsphere.rules.readwrite-splitting.data-sources.readwrite_ds.type=Static
# \u5199\u6570\u636E\u6E90\u540D\u79F0
spring.shardingsphere.rules.readwrite-splitting.data-sources.readwrite_ds.props.write-data-source-name=write-ds
# \u8BFB\u6570\u636E\u6E90\u540D\u79F0\uFF0C\u591A\u4E2A\u8BFB\u6570\u636E\u6E90\u7528\u9017\u53F7\u5206\u9694
spring.shardingsphere.rules.readwrite-splitting.data-sources.readwrite_ds.props.read-data-source-names=read-ds
# \u8D1F\u8F7D\u5747\u8861\u7B97\u6CD5\u914D\u7F6E
spring.shardingsphere.rules.readwrite-splitting.load-balancers.round_robin.type=ROUND_ROBIN
spring.shardingsphere.rules.readwrite-splitting.data-sources.readwrite_ds.load-balancer-name=round_robin



# \u4E0B\u9762\u7684\u914D\u7F6E\uFF0C\u662F\u914D\u7F6Etb_user_log\u8868\u7684\u5206\u8868\u89C4\u5219
# \u6307\u5B9A tb_user_log \u7684\u5206\u7247\u914D\u7F6E\uFF0C\u5728write-ds\u6570\u636E\u6E90\u91CC\u9762\u64CD\u4F5C
spring.shardingsphere.rules.sharding.tables.tb_user_log.actual-data-nodes=write-ds.tb_user_log_$->{0..1}
spring.shardingsphere.rules.sharding.tables.tb_user_log.table-strategy.standard.sharding-column=id
spring.shardingsphere.rules.sharding.tables.tb_user_log.table-strategy.standard.sharding-algorithm-name=tb_user_log_inline

# \u6307\u5B9A tb_user_log_inline \u7684\u5206\u7247\u89C4\u5219
spring.shardingsphere.rules.sharding.sharding-algorithms.tb_user_log_inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.tb_user_log_inline.props.algorithm-expression=tb_user_log_$->{id % 2}


# \u6253\u5370SQL
spring.shardingsphere.props.sql-show=true